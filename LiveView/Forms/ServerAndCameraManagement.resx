<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttHint.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>212, 17</value>
  </metadata>
  <metadata name="ilImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>302, 17</value>
  </metadata>
  <data name="ilImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAHA8AAAJNU0Z0AUkBTAIBAQgB
        AAE0AQEBNAEBARABAAEQAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMAAUADAAEwAwABAQEAAQgG
        AAEMGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEAAfABygGmAQABMwUAATMB
        AAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEAAYABfAH/AQACUAH/AQAB
        kwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFmAwABmQMAAcwCAAEzAwAC
        MwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZAgABZgHMAgABZgH/AgAB
        mQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFmAgABzAGZAgACzAIAAcwB
        /wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEzAQABmQEAATMBAAHMAQAB
        MwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFmAgABMwFmATMBAAEzAmYB
        AAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFmAQABMwKZAQABMwGZAcwB
        AAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEAATMBzAH/AQABMwH/ATMB
        AAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFmAQABZgEAAWYBAAGZAQAB
        ZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFmATMBzAEAAWYBMwH/AQAC
        ZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFmAQABZgKZAQABZgGZAcwB
        AAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEAAWYB/wIAAWYB/wEzAQAB
        ZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZAQABmQEAAZkBAAHMAQAB
        mQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEzAQABmQEzAWYBAAGZAWYB
        mQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/AQABmQHMAgABmQHMATMB
        AAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEAAZkBzAFmAQABmQH/AZkB
        AAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHMAQABzAEAAZkBMwIAAcwC
        MwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFmATMBAAGZAmYBAAHMAWYB
        mQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZAQABzAGZAcwBAAHMAZkB
        /wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/ATMBAAGZAf8BZgEAAcwB
        /wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHMATMCAAH/AjMBAAH/ATMB
        ZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJmAQAB/wFmAZkBAAH/AWYB
        zAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHMAQAB/wGZAf8BAAH/AcwC
        AAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEAAcwB/wFmAQAC/wGZAQAC
        /wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEAASEBAAGlAQADXwEAA3cB
        AAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7Af8BAAGkAqABAAOAAwAB
        /wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA///AP8A/wD/AAsAAQcBHAGTAQcOAAK8AwACvBkAAf8B
        8gEHA+8B8AH/BgABHAFLAXkBdAGTDAABvAGTAeMBvAEAAQcBFwFvAbwKAAIXAQACRwQAAfMBkgHrAm0B
        7QG8AfMC9AHzAbwB9wYAARwBmQF0AlIBmQsAAbwBFgLjAQcB4wIXAbwDAAMOAgABDwEAAuMCFwFHAgAB
        8wHvAfcBBwHwArwB7wH/AfAB8gK8Af8B7QYAAbwBdAGZAnoBeQGZAwAB7wHsBm0BbgFvA+MBFwFuAW0C
        AAEOARQB6wETARUCFAETAeoC4wEXAgABBwHvAfAB8QEHBO8B/wHwAfMCBwH/AZIHAAG8AXkBmgJ6AXkB
        mQIACUMBRAHjARcB4wFEAkMBAAEOARUBbQHtAu8C7QGSAW8BFgLjARcBAAH3AfQB8gHwBe8B/wHwAfMC
        vAH/AZIJAAGZAaACegF5AZkBAAFDAQABQwUHAe8CFgLjAUYBvAFDAQ8CFAFtAuwB7QHsAfcB7QEWAW8B
        AALjAQAB9wHzAfEB8AEHBO8B/wHxAfMC8AH/AfcDAAMOAgABDwG8AZkBoAF6AXkBdAGZAUMBAAFDBQcB
        bwEWAW8BRAEWAuMCFQFtAQABbQHtARIB6wFtAe8B7AHvAfcEAAHvAfMB8QHwAgcB7wFPAe8B9AHxAvIB
        vAH0AfcCAAEOARQB6wETARUCFAETAeoBeQKaARoBdAFDAQABQwUHAZMBFgHvAQcB7wFvARYBFQEAAW0B
        AAHrAQcBbQHrAW0B8QHvAfAB8QHsARQBDgEPAe8B8wLxAwcBmAHvAvQC/wL0AfcBAAEOARUBbQHtAu8C
        7QGSAe0BEgOZAXQBQwEAAUMFBwEQARECEAEHARUBvAFDAQAB7AEQAW0B7AHvAQcBvALwAfYB/wG8AewB
        EQEPAQcB8wLxBQcB8AHzAv8B9AHxAQcBDwIUAW0C7AHtAewB9wHtAbwB7QG8ApkBvAFDAQABQwoHAUMB
        AAFDAQABFAEAARQB7AH3Ae8B7AHrAe0B9wHsARIBEQEOAQABBwHzAfIB8QEHAe0D7AG8Ae8DBwHxAf8B
        FQFtAQABbQHtARIB6wFtAe8B7ALvBAABQwEAAUMKBwFDAQABQwEAAxMBbQPsAe8BkgFtBQABBwHzAfIB
        8QK8AwcB8AHtBgABbQEAAesBBwFtAesBbQHxAe8B8AHxAewBFAEOAQ8QQwMAAREMAAG8AvMB8gG8BO0B
        8AHtBgAB7AEQAW0B7AHvAQcBvALwAfYB/wG8AewBEQEPIAAB9AHwAfEB8wS8AQcB8QGSBgABFAEAARQB
        7AH3Ae8B7AHrAe0B9wHsARIBEQEOIgAB/wLxAfIE8QHzAfcGAAMTAW0D7AHvAZIBbSgAAfIBvAMHAu8B
        8AgAARE8AAHvAewObSUAAbwC7wEHAfAGABCmJQABHAFLAnQBHAYAAaYBAAGmChkBpgEAAaYTAAEOAQAB
        DgIAAQ4MAAEcAXQBegFSAUwBmQUAAaYBAAGmBRkEEAEZAaYBAAGmAe8B7A5tAgABDgEVAe0B7AFDARQD
        EgETBAAB7wHsBG0BdAGZAVIBeQFSAW4EbQGmAQABpgoZAaYBAAGmEEMBAAEOAeoBFAHsAfcB7wGSAewC
        7wHsBAAGQwFEAXQBmgJ6AVIBRANDAaYBAAGmBRkEEAEZAaYBAAGmAUMBAAFDCgcBQwEAAUMBEwEVARIC
        bQLsAfcB7wEHARsB8wQAAUMBAAFDBAcBHAGZAaACegF0ARQBAAFDAaYBAAGmChkBpgEAAaYBQwEAAUMF
        BwQQAQcBQwEAAUMBAAESAQABEQEHAW0BmQFDAbwBbQG8AQcBQwMAAUMBAAFDBQcBSgGaAaACegFSAbwB
        QwGmAQABpgoZAaYBAAGmAUMBAAFDCgcBQwEAAUMBAAHrAQABEAH0Am0B6gH0Ae8C8QG8AewBDwEOAUMB
        AAFDBgcBmQKaAXoBeQF0ARQQpgFDAQABQwUHBBABBwFDAQABQwEAAW0BEgEVAUMC7AHtAfcB7wL2AfMB
        vAEUAREBQwEAAUMFBwEQAREBUQSaAXQDAAGmAQABpgUZBBABGQFDAQABQwoHAUMBAAFDAQABQwEAAQ8B
        BwHvAbwBBwHvAQcBGgH3AhMBQwEAAUMBAAFDCAcBeQGaAhoBdAMAAaYBAAGmChkBQwEAAUMKBwFDAQAB
        QwEAAUMB7QEUAQ4BQwFtAeoB6wESARQFAAFDAQABQwkHAXQBeQF0AUsDAAGmAQABpgUZBBABGRBDEAAM
        QwEVARMBFAEVAwABpgEAAaYKGTMAAaYBAAGmChkzAA2mcAABQgFNAT4HAAE+AwABKAMAAUADAAEwAwAB
        AQEAAQEFAAGAAQEWAAP/gQAB/AE/Af8BOQP/AQAB/AEfAf4BEAH/AckB4AEAAfwBDwH+AQAB4AFBAYAB
        AAH8AQcCAAHAAQMCAAH+AQMCAAGAAQECAAH/AYEBQAIAAQkCAAHgAQABQAIAAQ8CAAHAAQABQAEAAYAD
        AAGAAQABQAEAAYAFAAFAAQIBgAEBAwABDwFAAQIBgAEfAQABHwGAAwAB7wH/AQABHwGAAQAE/wEAAR8B
        gAEBBP8BgAEfAYABHwT/AeABHwHvB/8CAAT/AfgBPwIABP8B+AE/AUABAgL/AeABfwH4AR8BQAECAgAB
        wAEPAgABQAECAgABgAEPAgABQAECAUABAgEAAQ8BQAECAUABAgFAAQIBgAEHAUABAAFAAQIBQAECAYAB
        AAFAAwABQAECAYABAAFAAQAB6AEAAUABAgGAAQEBQAEAAegBAAFAAQIBgAEfAUABAAHoAwAC/wIAAegB
        AAb/AegBAAb/AeABAA7/Cw==
</value>
  </data>
</root>