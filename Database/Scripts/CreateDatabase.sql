CREATE TABLE IF NOT EXISTS Servers (ID bigint IDENTITY(1,1) NOT NULL, iporhost nvarchar(100) NOT NULL, username nvarchar(100) NOT NULL, password nvarchar(100) NOT NULL, displayed_name nvarchar(100) NOT NULL, dongle_sn nvarchar(20) NULL, sziltech_sn nvarchar(20) NULL, mac_address nvarchar(20) NULL, win_user nvarchar(100) NULL, win_pass nvarchar(100) NULL, start_in_motion_popup BIT NOT NULL DEFAULT 'True', checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Cameras (ID bigint IDENTITY(1,1) NOT NULL, serverid bigint NOT NULL, cameraname nvarchar(100) NOT NULL, guid nvarchar(50) NOT NULL, priority int NULL, checksum nvarchar(200) NULL, recorder_index bigint NOT NULL, partner_camera_id bigint NULL, motion_trigger bigint NULL, motion_trigger_minimum_length bigint NULL, ip_address nvarchar(200) NULL, PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Grids (ID bigint IDENTITY(1,1) NOT NULL, rows int NOT NULL, columns int NOT NULL, pixelsfromright int NOT NULL, pixelsfrombottom int NOT NULL, name nvarchar(50) NOT NULL, priority int NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Sequences (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(50) NOT NULL, active bit NOT NULL, priority int NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS GridsInSequences (ID bigint IDENTITY(1,1) NOT NULL, sequenceid bigint NOT NULL, gridid bigint NOT NULL, timetoshow int NOT NULL, number int NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Grid_cameralist (ID bigint IDENTITY(1,1) NOT NULL, grid_id bigint NOT NULL, camera_id bigint NOT NULL, init_row int NOT NULL, init_col int NOT NULL, end_row int NULL, end_col int NULL, osd bit NOT NULL, frame bit NOT NULL, [left] int NULL, [top] int NULL, width int NULL, height int NULL, checksum nvarchar(200) NULL, ptz bit NOT NULL, motion_save_images bit NOT NULL, motion_number_of_photos int NOT NULL, motion_value int NOT NULL, csr_save_images bit NOT NULL, csr_number_of_photos int NOT NULL, csr_value int NOT NULL, show_date_time bit NOT NULL DEFAULT 'False' PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Monitors (ID bigint NOT NULL, device_id bigint NOT NULL, x int NOT NULL, y int NOT NULL, width int NOT NULL, height int NOT NULL, maxwidth int NOT NULL, maxheight int NOT NULL, little_x int NULL, little_y int NULL, little_width int NULL, little_height int NULL, monitor_name nvarchar(256) NULL, adapter_name nvarchar(256) NULL, device_name nvarchar(256) NULL, sziltech_id nvarchar(30) NOT NULL, isprimary bit NULL, removable bit NULL, attachedtodesktop bit NULL, mainform bit NULL, fullscreen bit NULL, can_show_sequence bit NULL, can_show_fullscreen bit NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Options (name NVARCHAR(50) NOT NULL, type_id TINYINT NOT NULL, value NVARCHAR(256), user_id BIGINT NOT NULL, PRIMARY KEY(name, user_id));INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('log_level', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('wait_for_server', 1, '5000', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('timebetweenlastandfirstserver', 1, '3000', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('last_language_id', 2, '1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('active_event', 2, '1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('use_watchdog', 0, 'True', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('active_template_id', 2, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('joy_x', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('joy_y', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('joy_z', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('cc_ofs', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('sf_ofs', 1, '1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('stat_msg_interval', 1, '1440', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('autologin_interval', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('max_cam_deflection', 1, '5000', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('max_wait_to_new_picture', 1, '300', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('language_id', 2, '2', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('language_id', 2, '2', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('foreground_color', 1, '-1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('foreground_color', 1, '-1', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('shadow_color', 1, '-16777216', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('shadow_color', 1, '-16777216', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('camera_caption', 1, '1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('camera_caption', 1, '1', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_type', 3, 'Arial', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_type', 3, 'Arial', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size_big', 1, '18', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size_big', 1, '18', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size_small', 1, '8', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size_small', 1, '8', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controller_style', 1, '1', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controller_style', 1, '0', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size', 8, '8.25', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('font_size', 8, '8.25', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('identify_seconds', 1, '5', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('identify_seconds', 1, '5', 2);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('mainformx', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('mainformy', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('mainformw', 1, '230', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('mainformh', 1, '840', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controlformx', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controlformy', 1, '0', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controlformw', 1, '290', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('controlformh', 1, '900', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('panel1h', 1, '166', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('panel3h', 1, '164', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('panel2h', 1, '153', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('panel4h', 1, '135', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('no_signal_file', 3, '', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('no_signal_file_hash', 3, '', 1);INSERT INTO Options(name, type_id, value, user_id) VALUES ('restart_template', 1, 240, 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('motion_popup_isopened', 0, 'False', 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('motion_popup_location_x', 1, 100, 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('motion_popup_location_y', 1, 100, 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('motion_popup_width', 1, 640, 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('motion_popup_height', 1, 480, 1);INSERT INTO Options (name, type_id, value, user_id) VALUES ('mp_upper_panel_height', 1, 540, 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('enable_threading', 0, 'True', 1);
CREATE TABLE IF NOT EXISTS Users (ID bigint IDENTITY(1,1) NOT NULL, username nvarchar(100) NOT NULL, password nvarchar(200) NOT NULL, fullname nvarchar(100) NULL, address nvarchar(200) NULL, email nvarchar(200) NULL, telephone nvarchar(50) NULL, carsign nvarchar(50) NULL, barcode nvarchar(50) NULL, other_information nvarchar(MAX) NULL, picture image NULL, secondary_logon_priority int NOT NULL, needed_secondary_logon_priority int NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO Users (username, password, address, email, telephone, secondary_logon_priority, needed_secondary_logon_priority, fullname) VALUES ('" + SZILTECHUSERNAME + "', '" + SZILTECHPASSWORD + "', '" + SZILTECHADDRESS + "', '" + SZILTECHEMAIL + "', '" + SZILTECHTELEPHONE + "', 100, 0, '" + SZILTECHELKFT + "'); INSERT INTO Users (username, password, secondary_logon_priority, needed_secondary_logon_priority) VALUES ('" + ADMINNAME + "', '" + ADMINPASS + "', 100, 0);
CREATE TABLE IF NOT EXISTS Groups (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(100) NOT NULL, other_information nvarchar(MAX) NULL, parent_group_id bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO Groups (name, other_information, parent_group_id) VALUES ('BUILTIN_DEV_GRP', 'Beépített csoport a Sziltech Electronic Kft. munkatársai számára', 0); INSERT INTO Groups (name, other_information, parent_group_id) VALUES ('BUILTIN_ADMIN_GRP', 'Beépített csoport a rendszer adminisztrátorainak', 1);
CREATE TABLE IF NOT EXISTS Rights (ID bigint IDENTITY(1,1) NOT NULL, operation_id bigint NOT NULL, group_id bigint NOT NULL, user_event bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Operations (ID bigint NOT NULL, language_element_id bigint NOT NULL, note nvarchar(100) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Events (ID bigint NOT NULL, language_element_id bigint NOT NULL, note nvarchar(100) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Languages (ID bigint NOT NULL, [name] nvarchar(100) NULL, flag image NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS LanguageElements (ID bigint IDENTITY(1,1) NOT NULL, note nvarchar(MAX) NULL, date datetime NOT NULL, language_id bigint NOT NULL, element_id bigint NOT NULL, value nvarchar(MAX) NOT NULL, user_id bigint NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Logs (ID bigint IDENTITY(1,1) NOT NULL, date datetime NOT NULL, user_id bigint NOT NULL, operation_id bigint NULL, event_id bigint, language_element_id bigint NULL, other_information nvarchar(MAX) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS UsersInGroups (ID bigint IDENTITY(1,1) NOT NULL, user_id bigint NOT NULL, group_id bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO UsersInGroups (user_id, group_id) VALUES (1, 1); INSERT INTO UsersInGroups (user_id, group_id) VALUES (2, 2);
CREATE TABLE IF NOT EXISTS UserEvents (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(100) NOT NULL, note nvarchar(MAX) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO UserEvents (name, note) VALUES ('Alaphelyzet', 'Nincs sem pozitív, sem negatív elbírálás a felhasználókkal szemben.');
CREATE TABLE IF NOT EXISTS RightsOnCameras (ID bigint IDENTITY(1,1) NOT NULL, camera_id bigint NOT NULL, group_id bigint NOT NULL, user_event bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Pictures (ID bigint IDENTITY(1,1) NOT NULL, camera_id bigint NOT NULL, store_date datetime NOT NULL, event_date datetime NOT NULL, img image NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Templates (ID bigint IDENTITY(1,1) NOT NULL, template_name nvarchar(50) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS FormPositions (ID bigint IDENTITY(1,1) NOT NULL, template_id bigint NOT NULL, form_id bigint NOT NULL, secondary_id bigint NULL, isopened bit NOT NULL, x int NOT NULL, y int NOT NULL, w int NOT NULL, h int NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS LogedinUser (ID bigint IDENTITY(1,1) NOT NULL, user_id nvarchar(200) NOT NULL, login_date datetime NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO LogedinUser (user_id) VALUES ('SOWnGHe9ogk='); INSERT INTO LogedinUser (user_id) VALUES ('SOWnGHe9ogk=');
CREATE TABLE IF NOT EXISTS Databases (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(100) NOT NULL, path nvarchar(250) NOT NULL, isexists bit NOT NULL, isactive bit NOT NULL, isarchived bit NOT NULL, fromdate datetime NULL, todate datetime NULL, filename nvarchar(250) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS ReadingGroups (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(50) NOT NULL, description nvarchar(MAX) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS Rules (ID bigint IDENTITY(1,1) NOT NULL, name nvarchar(50) NOT NULL, rulestr nvarchar(50) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS RgCfRule (ID bigint IDENTITY(1,1) NOT NULL, RG_ID bigint NOT NULL, R_ID bigint NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS BSReadings (ID bigint IDENTITY(1,1) NOT NULL, date datetime NOT NULL, value nvarchar(50) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS BSOptions (ID bigint IDENTITY(1,1) NOT NULL, lcid_in int NOT NULL, lcid_out int NOT NULL, max_delay int NOT NULL, custom_in int NOT NULL, custom_out int NOT NULL, serial_scanner bit NOT NULL, selected_com_port int NOT NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO BSOptions (lcid_in, lcid_out, max_delay, custom_in, custom_out, serial_scanner, selected_com_port) VALUES (1038, 1033, 50, 0, 0, 'False', -1);
CREATE TABLE IF NOT EXISTS BSCharChanger (ID bigint NOT NULL, chars nvarchar(255) NOT NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO BSCharChanger (ID, chars) VALUES (1033, '`1234567890-=qwertyuiop[]asdfghjkl;''\\\\zxcvbnm,./ ~!@#$%&*()_+QWERTYUIOP{}ASDFGHJKL\"||ZXCVBNM<>? '); INSERT INTO BSCharChanger (ID, chars) VALUES (1038, '0123456789öüóqwertzuiopőúasdfghjkléáűíyxcvbnm,.- §''\"+!%/=()ÖÜÓQWERTZUIOPŐÚASDFGHJKLÉÁŰÍYXCVBNM?_ ');
CREATE TABLE IF NOT EXISTS Pass_readings (ID bigint NOT NULL, date1 datetime NOT NULL, date2 datetime NOT NULL, date3 datetime NOT NULL, date4 datetime NOT NULL, value nvarchar(255) NOT NULL, sender nvarchar(255) NOT NULL, senders_listener_port int NOT NULL, acknowledge bit NOT NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS DBServers (ID bigint IDENTITY(1,1) NOT NULL, iporhost nvarchar(100) NOT NULL, db_name nvarchar(100) NOT NULL, username nvarchar(100) NOT NULL, password nvarchar(100) NOT NULL, displayed_name nvarchar(100) NOT NULL, mac_address nvarchar(20) NULL, db_port int NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS ServerStates (ID bigint IDENTITY(1,1) NOT NULL, server_id bigint NOT NULL, last_state bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS IOPorts (ID bigint IDENTITY(1,1) NOT NULL, device_id int NOT NULL, port_num int NOT NULL, name nvarchar(255) NOT NULL, friendly_name nvarchar(255) NOT NULL, direction int NOT NULL, state int NOT NULL, min_trigger_time int NOT NULL, max_count int NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS IOPorts_Logs (ID bigint IDENTITY(1,1) NOT NULL, device_id int NOT NULL, port_num int NOT NULL, state int NOT NULL, date datetime NOT NULL, user_id bigint NOT NULL, note nvarchar(MAX) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];
CREATE TABLE IF NOT EXISTS IOPorts_Rules (ID bigint IDENTITY(1,1) NOT NULL, device_id int NOT NULL, port_num int NOT NULL, operation_id bigint NULL, event_id bigint NULL, zero_signaled bit NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY];

INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('is_controller_opened', 0, 'True', 1);INSERT INTO [Options] (name, type_id, value, user_id) VALUES ('is_controller_opened', 0, 'True', 2);

--CREATE TABLE IF NOT EXISTS Rights (ID bigint IDENTITY(1,1) NOT NULL, operation_id bigint NOT NULL, group_id bigint NOT NULL, user_event bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE Rights ADD CONSTRAINT FK__Groups_ID__Rights_group_id FOREIGN KEY (group_id) REFERENCES Groups (ID) ON DELETE CASCADE; ALTER TABLE Rights ADD CONSTRAINT FK__Operations_ID__Rights_operation_id FOREIGN KEY (operation_id) REFERENCES Operations (ID) ON DELETE CASCADE; ALTER TABLE Rights ADD CONSTRAINT FK__UserEvents_ID__Rights_user_event FOREIGN KEY (user_event) REFERENCES UserEvents (ID);
--CREATE TABLE IF NOT EXISTS LanguageElements (ID bigint IDENTITY(1,1) NOT NULL, note nvarchar(MAX) NULL, date datetime NOT NULL, language_id bigint NOT NULL, element_id bigint NOT NULL, value nvarchar(MAX) NOT NULL, user_id bigint NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE LanguageElements ADD CONSTRAINT FK__Languages_ID__LanguageElements_language_id FOREIGN KEY (language_id) REFERENCES Languages (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS UsersInGroups (ID bigint IDENTITY(1,1) NOT NULL, user_id bigint NOT NULL, group_id bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; INSERT INTO UsersInGroups (user_id, group_id) VALUES (1, 1); INSERT INTO UsersInGroups (user_id, group_id) VALUES (2, 2); ALTER TABLE UsersInGroups ADD CONSTRAINT FK__Users_ID__UsersInGroups_user_id FOREIGN KEY (user_id) REFERENCES Users (ID) ON DELETE CASCADE; ALTER TABLE UsersInGroups ADD CONSTRAINT FK__Groups_ID__UsersInGroups_group_id FOREIGN KEY (group_id) REFERENCES Groups (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS RightsOnCameras (ID bigint IDENTITY(1,1) NOT NULL, camera_id bigint NOT NULL, group_id bigint NOT NULL, user_event bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE RightsOnCameras ADD CONSTRAINT FK__UserEvents_ID__RightsOnCameras_user_event FOREIGN KEY (user_event) REFERENCES UserEvents (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS FormPositions (ID bigint IDENTITY(1,1) NOT NULL, template_id bigint NOT NULL, form_id bigint NOT NULL, secondary_id bigint NULL, isopened bit NOT NULL, x int NOT NULL, y int NOT NULL, w int NOT NULL, h int NOT NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE FormPositions ADD CONSTRAINT FK__Templates_ID__FormPositions_template_id FOREIGN KEY (template_id) REFERENCES Templates (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS RgCfRule (ID bigint IDENTITY(1,1) NOT NULL, RG_ID bigint NOT NULL, R_ID bigint NOT NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE RgCfRule ADD CONSTRAINT FK__ReadingGroups_ID__RgCfRule_RG_ID FOREIGN KEY (RG_ID) REFERENCES ReadingGroups (ID) ON DELETE CASCADE; ALTER TABLE RgCfRule ADD CONSTRAINT FK__Rules_ID__RgCfRule_R_ID FOREIGN KEY (R_ID) REFERENCES Rules (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS ServerStates (ID bigint IDENTITY(1,1) NOT NULL, server_id bigint NOT NULL, last_state bigint NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE ServerStates ADD CONSTRAINT FK__Servers_ID__ServerStates_server_id FOREIGN KEY (server_id) REFERENCES Servers (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS IOPorts_Logs (ID bigint IDENTITY(1,1) NOT NULL, device_id int NOT NULL, port_num int NOT NULL, state int NOT NULL, date datetime NOT NULL, user_id bigint NOT NULL, note nvarchar(MAX) NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE IOPorts_Logs ADD CONSTRAINT FK__Users_ID__IOPorts_Logs_user_id FOREIGN KEY (user_id) REFERENCES Users (ID) ON DELETE CASCADE;
--CREATE TABLE IF NOT EXISTS IOPorts_Rules (ID bigint IDENTITY(1,1) NOT NULL, device_id int NOT NULL, port_num int NOT NULL, operation_id bigint NULL, event_id bigint NULL, zero_signaled bit NOT NULL, checksum nvarchar(200) NULL PRIMARY KEY(ID)) ON [PRIMARY]; ALTER TABLE IOPorts_Rules ADD CONSTRAINT FK__Operations_ID__IOPorts_Rules_operation_id FOREIGN KEY (operation_id) REFERENCES Operations (ID) ON DELETE CASCADE;
